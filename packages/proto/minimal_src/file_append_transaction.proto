/**
 * # File Append Transaction
 * Transaction for appending data to files.
 */
syntax = "proto3";

package proto;

// SPDX-License-Identifier: Apache-2.0
option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "basic_types.proto";
import "duration.proto";
import "custom_fees.proto";
import "file_append.proto";

/**
 * A wrapper around signed transaction bytes.<br/>
 * This was originally a transaction with body, signatures, and/or bytes,
 * but is not only a wrapper around a byte array containing signed transction
 * bytes.
 *
 * The `signedTransactionBytes` field is REQUIRED and MUST contain a valid,
 * serialized, `SignedTransaction` message.<br/>
 * All other fields are deprecated and MUST NOT be set.
 *
 * #### Additional Notes
 * The four deprecated fields will be removed and reserved in a future release.
 */
message Transaction {
    // <<<pbj.java_package = "com.hedera.hapi.node.base">>> This comment is special code for setting PBJ Compiler java package
    /**
     * Replaced with `signedTransactionBytes`.<br/>
     * The body of the transaction.
     */
    TransactionBody body = 1 [deprecated = true];

    /**
     * Replaced with `signedTransactionBytes`.<br/>
     * The signatures on the body.
     */
    SignatureList sigs = 2 [deprecated = true];

    /**
     * Replaced with `signedTransactionBytes`.<br/>
     * The signatures on the body with a newer format.
     */
    SignatureMap sigMap = 3 [deprecated = true];

    /**
     * Replaced with `signedTransactionBytes`.<br/>
     * TransactionBody serialized into bytes.
     */
    bytes bodyBytes = 4 [deprecated = true];

    /**
     * A valid, serialized, `SignedTransaction` message.
     * <p>
     * This field MUST be present.
     * This field MUST NOT exceed the current network transaction size limit
     * (currently 6144 bytes).
     */
    bytes signedTransactionBytes = 5;
}

/**
 * A transaction body for file append.
 */
message TransactionBody {
    reserved 30, 61, 62, 63, 64;

    /**
     * A transaction identifier.
     */
    TransactionID transactionID = 1;

    /**
     * A node account identifier.
     */
    AccountID nodeAccountID = 2;

    /**
     * A maximum transaction fee, in tinybar.
     */
    uint64 transactionFee = 3;

    /**
     * A maximum duration in which to execute this transaction.
     */
    Duration transactionValidDuration = 4;

    /**
     * A short description for this transaction.
     */
    string memo = 6;

    /**
     * The public key of the trusted batch assembler.
     */
    Key batch_key = 73;

    oneof data {
        /**
         * Append data to the end of a file.
         */
        FileAppendTransactionBody fileAppend = 16;
    }

    /**
     * A list of maximum custom fees that the users are willing to pay.
     */
    repeated CustomFeeLimit max_custom_fees = 1001;
}

message TransactionList {
    repeated Transaction transaction_list = 1;
}