/**
 * # System Delete Transaction
 * Transaction for deleting files or contracts as an administrative function.
 */
syntax = "proto3";

package proto;

// SPDX-License-Identifier: Apache-2.0
option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "basic_types.proto";
import "timestamp.proto";
import "duration.proto";
import "custom_fees.proto";

/**
 * A wrapper around signed transaction bytes for system delete.
 */
message Transaction {
    /**
     * A valid, serialized, `SignedTransaction` message.
     */
    bytes signedTransactionBytes = 5;
}

/**
 * Delete a file or contract bytecode as an administrative transaction.
 */
message SystemDeleteTransactionBody {
    oneof id {
        /**
         * A file identifier.
         */
        FileID fileID = 1;

        /**
         * A contract identifier.
         */
        ContractID contractID = 2;
    }

    /**
     * A timestamp indicating when the file will be removed from state.
     */
    TimestampSeconds expirationTime = 3;
}

/**
 * A transaction body for system delete.
 */
message TransactionBody {
    reserved 30, 61, 62, 63, 64;

    /**
     * A transaction identifier.
     */
    TransactionID transactionID = 1;

    /**
     * A node account identifier.
     */
    AccountID nodeAccountID = 2;

    /**
     * A maximum transaction fee, in tinybar.
     */
    uint64 transactionFee = 3;

    /**
     * A maximum duration in which to execute this transaction.
     */
    Duration transactionValidDuration = 4;

    /**
     * A short description for this transaction.
     */
    string memo = 6;

    /**
     * The public key of the trusted batch assembler.
     */
    Key batch_key = 73;

    oneof data {
        /**
         * Delete a file or contract as an administrative function.
         */
        SystemDeleteTransactionBody systemDelete = 20;
    }

    /**
     * A list of maximum custom fees that the users are willing to pay.
     */
    repeated CustomFeeLimit max_custom_fees = 1001;
}
