/**
 * # Ethereum Transaction
 * Transaction for Ethereum-format transactions.
 */
syntax = "proto3";

package proto;

// SPDX-License-Identifier: Apache-2.0
option java_package = "com.hederahashgraph.api.proto.java";
option java_multiple_files = true;

import "basic_types.proto";
import "duration.proto";
import "custom_fees.proto";

/**
 * A wrapper around signed transaction bytes for Ethereum transactions.
 */
message Transaction {
    /**
     * A valid, serialized, `SignedTransaction` message.
     */
    bytes signedTransactionBytes = 5;
}

/**
 * A transaction in Ethereum format.
 */
message EthereumTransactionBody {
    /**
     * The raw Ethereum transaction data.
     */
    bytes ethereum_data = 1;

    /**
     * The callData for the Ethereum transaction.
     */
    FileID call_data = 2;

    /**
     * A maximum amount of gas offered to pay the Ethereum transaction costs.
     */
    int64 max_gas_allowance = 3;
}

/**
 * A transaction body for Ethereum transactions.
 */
message TransactionBody {
    reserved 30, 61, 62, 63, 64;

    /**
     * A transaction identifier.
     */
    TransactionID transactionID = 1;

    /**
     * A node account identifier.
     */
    AccountID nodeAccountID = 2;

    /**
     * A maximum transaction fee, in tinybar.
     */
    uint64 transactionFee = 3;

    /**
     * A maximum duration in which to execute this transaction.
     */
    Duration transactionValidDuration = 4;

    /**
     * A short description for this transaction.
     */
    string memo = 6;

    /**
     * The public key of the trusted batch assembler.
     */
    Key batch_key = 73;

    oneof data {
        /**
         * Perform an Ethereum encoded transaction.
         */
        EthereumTransactionBody ethereumTransaction = 50;
    }

    /**
     * A list of maximum custom fees that the users are willing to pay.
     */
    repeated CustomFeeLimit max_custom_fees = 1001;
}

message TransactionList {
    repeated Transaction transaction_list = 1;
}