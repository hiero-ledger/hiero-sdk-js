version: "3"

silent: true

tasks:
    default:
        deps:
            - build

    docs:
        cmds:
            - npx typedoc
              --excludeInternal
              --excludePrivate
              --excludeProtected
              --out docs
              --validation.invalidLink
              --entryPoints src/index.js src/browser.js src/native.js

    install:submodules:
        vars:
            stag: "v0.62.3"
        cmds:
            - git submodule update --init --recursive --remote
            - |
                (
                cd src/services &&
                if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
                    git fetch --unshallow --tags
                fi &&
                git checkout {{.stag}}
                )

    move:protobufs:
        after:
            - "install:submodules"
        desc: "Move protobufs from src/services/hapi/hedera-protobufs-java-api/src/main/proto to src/proto"
        cmds:
            - rm -rf src/proto/services
            - rm -rf src/proto/streams
            - mv src/services/hapi/hedera-protobuf-java-api/src/main/proto/services src/proto/
            - mv src/services/hapi/hedera-protobuf-java-api/src/main/proto/streams src/proto/
            - mv src/services/hapi/hedera-protobuf-java-api/src/main/proto/platform/event/* src/proto/services/
            - echo "Protobufs moved successfully!"
            - task "delete:submodule"

    delete:submodule:
        cmds:
            - find src/services -mindepth 1 -delete
            - echo "Submodule contents removed successfully, folder retained."

    install:
        deps:
            - "install:submodules"
        cmds:
            - task "move:protobufs"
            - pnpm i > /dev/null

    build:
        deps:
            - install
        cmds:
            - task "build:standalone"

    build:standalone:
        cmds:
            - npx pbjs -r hashgraph -t static-module -w es6 -p=src/proto --force-long --no-beautify --no-convert --no-delimited --no-verify -o src/proto.js src/proto/**/*.proto
            - npx pbts -n hashgraph -o src/proto.d.ts src/proto.js
            - perl -pi -e "s#(?<!api\.)proto\.#hashgraph.proto.#g" src/proto.d.ts
            - task: format
            - task: lint
            - npx babel src -d lib
            - npx copyfiles -u 1 src/index.d.ts src/proto.d.ts lib/ > /dev/null
              # This is necessary to correctly run browser tests with an unpublished proto package
            - npx yalc publish > /dev/null

    clean:
        cmds:
            - rm -rf node_modules

    format:
        cmds:
            - npx prettier "*.json" "src/*.js" --write > /dev/null

    lint:
        deps:
            - "lint:types"
            - "lint:format"
            - "lint:js"

    "lint:types":
        cmds:
            - npx tsc

    "lint:format":
        cmds:
            - npx prettier "*.json" "src/*.js" --check > /dev/null

    "lint:js":
        cmds:
            - npx eslint --fix "src/*.js"

    "test:release":
        deps:
            - build

    update:
        vars:
            latest_tag:
                sh: git ls-remote --tags https://github.com/hiero-ledger/hiero-consensus-node.git | awk '{print $2}' | grep -E 'refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -1 | sed 's#refs/tags/##'
            proto: "{{.proto | default .latest_tag}}"
        cmds:
            - echo "Protobuf version set to {{.proto}}"
            - git submodule update --init --recursive --remote
            - |
                (
                cd src/services &&
                if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
                    git fetch --unshallow --tags
                fi &&
                git checkout {{.stag}}
                )
            - task "move:protobufs"
            - pnpm i > /dev/null
            - task "build:standalone"
            - echo "Successfully updated protobufs to {{.proto}}"

    publish:
        preconditions:
            - "! grep '\".*\": \"\\(link\\|file\\):.*\"' package.json > /dev/null"
        deps:
            - "test:release"
        cmds:
            - pnpm publish {{.CLI_ARGS}}
